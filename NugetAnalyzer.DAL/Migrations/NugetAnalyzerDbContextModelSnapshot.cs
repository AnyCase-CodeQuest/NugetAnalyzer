// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NugetAnalyzer.DAL.Context;

namespace NugetAnalyzer.DAL.Migrations
{
    [DbContext(typeof(NugetAnalyzerDbContext))]
    partial class NugetAnalyzerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NugetAnalyzer.Domain.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Build");

                    b.Property<int>("Major");

                    b.Property<int>("Minor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<int>("ProjectId");

                    b.Property<DateTime?>("PublishedDate");

                    b.Property<int?>("ReferencePackageId");

                    b.Property<int>("Revision");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ReferencePackageId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<int>("SolutionId");

                    b.HasKey("Id");

                    b.HasIndex("SolutionId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.ReferencePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Build");

                    b.Property<int>("Major");

                    b.Property<int>("Minor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<DateTime?>("PublishedDate");

                    b.Property<int>("Revision");

                    b.HasKey("Id");

                    b.ToTable("ReferencePackage");
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Repository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Repository");
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<int>("RepositoryId");

                    b.HasKey("Id");

                    b.HasIndex("RepositoryId");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasMaxLength(256);

                    b.Property<string>("LastName")
                        .HasMaxLength(256);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Package", b =>
                {
                    b.HasOne("NugetAnalyzer.Domain.Project", "Project")
                        .WithMany("Packages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NugetAnalyzer.Domain.ReferencePackage", "ReferencePackage")
                        .WithMany("CurrentPackages")
                        .HasForeignKey("ReferencePackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Project", b =>
                {
                    b.HasOne("NugetAnalyzer.Domain.Solution", "Solution")
                        .WithMany("Projects")
                        .HasForeignKey("SolutionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Repository", b =>
                {
                    b.HasOne("NugetAnalyzer.Domain.User", "User")
                        .WithMany("Repositories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NugetAnalyzer.Domain.Solution", b =>
                {
                    b.HasOne("NugetAnalyzer.Domain.Repository", "Repository")
                        .WithMany("Solutions")
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
