// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NugetAnalyzer.DAL.Context;

namespace NugetAnalyzer.DAL.Migrations
{
    [DbContext(typeof(NugetAnalyzerDbContext))]
    [Migration("20190429152936_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NugetAnalyzer.Domain.Package", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime?>("LastUpdateTime");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(4096);

                b.HasKey("Id");

                b.ToTable("Packages");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.PackageVersion", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("Build");

                b.Property<int>("Major");

                b.Property<int>("Minor");

                b.Property<int>("PackageId");

                b.Property<DateTime?>("PublishedDate");

                b.Property<int>("Revision");

                b.HasKey("Id");

                b.HasIndex("PackageId");

                b.ToTable("PackageVersions");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.Project", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(4096);

                b.Property<int>("SolutionId");

                b.HasKey("Id");

                b.HasIndex("SolutionId");

                b.ToTable("Projects");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.ProjectPackageVersion", b =>
            {
                b.Property<int>("ProjectId");

                b.Property<int>("PackageVersionId");

                b.HasKey("ProjectId", "PackageVersionId");

                b.HasIndex("PackageVersionId");

                b.ToTable("ProjectPackageVersions");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.Repository", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(4096);

                b.Property<int>("UserId");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("Repositories");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.Solution", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(4096);

                b.Property<int>("RepositoryId");

                b.HasKey("Id");

                b.HasIndex("RepositoryId");

                b.ToTable("Solutions");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Email")
                    .HasMaxLength(256);

                b.Property<string>("FirstName")
                    .HasMaxLength(256);

                b.Property<string>("LastName")
                    .HasMaxLength(256);

                b.Property<string>("UserName")
                    .IsRequired()
                    .HasMaxLength(256);

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.PackageVersion", b =>
            {
                b.HasOne("NugetAnalyzer.Domain.Package", "Package")
                    .WithMany("Versions")
                    .HasForeignKey("PackageId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.Project", b =>
            {
                b.HasOne("NugetAnalyzer.Domain.Solution", "Solution")
                    .WithMany("Projects")
                    .HasForeignKey("SolutionId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.ProjectPackageVersion", b =>
            {
                b.HasOne("NugetAnalyzer.Domain.PackageVersion", "PackageVersion")
                    .WithMany("ProjectPackageVersions")
                    .HasForeignKey("PackageVersionId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne("NugetAnalyzer.Domain.Project", "Project")
                    .WithMany("ProjectPackageVersions")
                    .HasForeignKey("ProjectId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.Repository", b =>
            {
                b.HasOne("NugetAnalyzer.Domain.User", "User")
                    .WithMany("Repositories")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("NugetAnalyzer.Domain.Solution", b =>
            {
                b.HasOne("NugetAnalyzer.Domain.Repository", "Repository")
                    .WithMany("Solutions")
                    .HasForeignKey("RepositoryId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}